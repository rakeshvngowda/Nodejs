{
	"info": {
		"_postman_id": "fee56e6b-ac06-4557-be6f-c89bfdde23af",
		"name": "NA3_U13_Hci",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "lvp_login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const cookieJar = pm.cookies.jar()",
							"",
							"",
							"cookieJar.clear(pm.environment.get('lvp_url'), (error) => {",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"followRedirects": true,
				"followOriginalHttpMethod": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_code",
							"value": "livevox",
							"type": "text"
						},
						{
							"key": "user",
							"value": "rrajarao",
							"type": "text"
						},
						{
							"key": "pass",
							"value": "livevox1",
							"type": "text"
						},
						{
							"key": "operation",
							"value": "login",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/login",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_acd_version",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"let acd_version = response.dataObj.client_ccs_features__link_acd;",
							"",
							"console.log(acd_version)",
							"",
							"pm.globals.set('acd_version',acd_version)",
							"",
							"",
							"// Assertions",
							"// ------------------Status Code -------------------------------",
							"pm.test(\"Status code is \"+pm.response.status, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// ------------------ Response status",
							"pm.test(\"Checking status \"+response.status, function () {",
							"    pm.expect(response.status).to.eql(\"success\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/client?operation=get_detail&client_id={{client_id}}&smartdate=true&_={{$timestamp}}&fullConfigMgrGUI=true&rnd={{$timestamp}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"client"
					],
					"query": [
						{
							"key": "operation",
							"value": "get_detail"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "smartdate",
							"value": "true"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "rnd",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_campaigns_db_before_upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"let deactivatable_campaign = [];",
							"",
							"for (let i in response.dataObj) {",
							"    if (response.dataObj[i].filename == pm.environment.get('file_name') && response.dataObj[i].isBActive == true){",
							"        // console.log(response.dataObj[i])",
							"        deactivatable_campaign.push(response.dataObj[i].campaign_id)",
							"        console.log(response.dataObj[i])",
							"    }",
							"}",
							"",
							"pm.globals.set('deactivatable_campaign',deactivatable_campaign[0])",
							"// console.log(deactivatable_campaign)",
							"console.log(deactivatable_campaign)",
							"console.log(typeof(deactivatable_campaign))",
							"",
							"// Assertions",
							"// ----------------------Status Code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Respinse status",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql(\"success\");",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/campaign_{{lvp_version}}/get_campaigns_db?fullConfigMgrGUI=true&client_id={{client_id}}&noOfDays=1&level=M1_CC&showOnlyActiveCampaigns=false&showFutureCampaigns=false&_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"campaign_{{lvp_version}}",
						"get_campaigns_db"
					],
					"query": [
						{
							"key": null,
							"value": null,
							"disabled": true
						},
						{
							"key": null,
							"value": null,
							"disabled": true
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "noOfDays",
							"value": "1"
						},
						{
							"key": "level",
							"value": "M1_CC"
						},
						{
							"key": "showOnlyActiveCampaigns",
							"value": "false"
						},
						{
							"key": "showFutureCampaigns",
							"value": "false"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "campaign_deactivate",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"if (pm.globals.get('deactivatable_campaign').length == 1) {",
							"    // postman.setNextRequest('campaign_deactivate')",
							"    console.log(\"campaigns need to deactivate\")",
							"} else {",
							"    postman.setNextRequest()",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response)",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql('success');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/campaign?operation=deactivate&campaign_id={{deactivatable_campaign}}&client_id={{client_id}}&skill_id={{ClickerSkillId}}&_{{$timestamp}}&fullConfigMgrGUI=true&rnd={{$timestamp}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"campaign"
					],
					"query": [
						{
							"key": "operation",
							"value": "deactivate"
						},
						{
							"key": "campaign_id",
							"value": "{{deactivatable_campaign}}"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "skill_id",
							"value": "{{ClickerSkillId}}"
						},
						{
							"key": "_{{$timestamp}}",
							"value": null
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "rnd",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "campaign_upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"console.log(response)",
							"const uploaded_campaign = response.dataObj;",
							"console.log(uploaded_campaign)",
							"pm.globals.set('uploaded_campaign',uploaded_campaign)",
							"",
							"",
							"// Assertions",
							"// ------------------Status Code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//  -----------Response status",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql('success');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "skill_id",
							"value": "{{ClickerSkillId}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "operator_phone",
							"value": "{{operator_phone}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "amOption",
							"value": "NO_AM",
							"type": "text",
							"disabled": true
						},
						{
							"key": "voiceId",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "callerId",
							"value": "{{operator_phone}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "callbackPhone",
							"value": "{{operator_phone}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "strategy_id",
							"value": "{{strategy_id}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "scrub_wireless",
							"value": "NONE",
							"type": "text",
							"disabled": true
						},
						{
							"key": "isAppendableCampaign",
							"value": "false",
							"type": "text",
							"disabled": true
						},
						{
							"key": "excludeParentSegmentation",
							"value": "false",
							"type": "text",
							"disabled": true
						},
						{
							"key": "campaignTypeId",
							"value": "1",
							"type": "text",
							"disabled": true
						},
						{
							"key": "campaignPartitionTemplate",
							"value": "{{campaignPartitionTemplate}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "pending",
							"value": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "tree_level",
							"value": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "file",
							"type": "file",
							"src": "/home/rnarasimhaiah/Documents/campaign/Normal/ACT_campaign3_4159.txt"
						},
						{
							"key": "file_name",
							"value": "{{file_name}}",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/campaign?operation=upload&client_id={{client_id}}&skill_id={{ClickerSkillId}}&operator_phone={{operator_phone}}&amOption=NO_AM&voiceId=1&callerId={{operator_phone}}&callbackPhone={{operator_phone}}&strategy_id={{strategy_id}}&scrub_wireless=NONE&isAppendableCampaign=false&excludeParentSegmentation=false&campaignTypeId=1&campaignPartitionTemplate={{campaignPartitionTemplate}}&pending=0&tree_level=0&_={{$timestamp}}&fullConfigMgrGUI=true&file_name={{file_name}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"campaign"
					],
					"query": [
						{
							"key": "operation",
							"value": "upload"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "skill_id",
							"value": "{{ClickerSkillId}}"
						},
						{
							"key": "operator_phone",
							"value": "{{operator_phone}}"
						},
						{
							"key": "amOption",
							"value": "NO_AM"
						},
						{
							"key": "voiceId",
							"value": "1"
						},
						{
							"key": "callerId",
							"value": "{{operator_phone}}"
						},
						{
							"key": "callbackPhone",
							"value": "{{operator_phone}}"
						},
						{
							"key": "strategy_id",
							"value": "{{strategy_id}}"
						},
						{
							"key": "scrub_wireless",
							"value": "NONE"
						},
						{
							"key": "isAppendableCampaign",
							"value": "false"
						},
						{
							"key": "excludeParentSegmentation",
							"value": "false"
						},
						{
							"key": "campaignTypeId",
							"value": "1"
						},
						{
							"key": "campaignPartitionTemplate",
							"value": "{{campaignPartitionTemplate}}"
						},
						{
							"key": "pending",
							"value": "0"
						},
						{
							"key": "tree_level",
							"value": "0"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "file_name",
							"value": "{{file_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Build_camp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"console.log(response)",
							"",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql('success');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/campaign?operation=build&action=BUILD&campaign_id={{uploaded_campaign}}&client_id={{client_id}}&skill_id={{ClickerSkillId}}&_{{$timestamp}}&fullConfigMgrGUI=true&rnd={{$timestamp}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"campaign"
					],
					"query": [
						{
							"key": "operation",
							"value": "build"
						},
						{
							"key": "action",
							"value": "BUILD"
						},
						{
							"key": "campaign_id",
							"value": "{{uploaded_campaign}}"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "skill_id",
							"value": "{{ClickerSkillId}}"
						},
						{
							"key": "_{{$timestamp}}",
							"value": null
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "rnd",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PLAY_Campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"console.log(response)",
							"",
							"",
							"// Assertions",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql('success');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/campaign?operation=update_state&action=PLAY&campaign_id={{uploaded_campaign}}&client_id={{client_id}}&skill_id={{ClickerSkillId}}&_{{$timestamp}}&fullConfigMgrGUI=true&rnd={{$timestamp}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"campaign"
					],
					"query": [
						{
							"key": "operation",
							"value": "update_state"
						},
						{
							"key": "action",
							"value": "PLAY"
						},
						{
							"key": "campaign_id",
							"value": "{{uploaded_campaign}}"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "skill_id",
							"value": "{{ClickerSkillId}}"
						},
						{
							"key": "_{{$timestamp}}",
							"value": null
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "rnd",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Clicker_Logon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"console.log(response)",
							"",
							"const cookieJar = pm.cookies.jar();",
							"",
							"cookieJar.get(pm.environment.get('lvp_url'), \"LV_Session\", (error, cookie) => {",
							"    console.log(cookie)",
							"    pm.globals.set('hci_clicker_agent_cookie',cookie)",
							"",
							"});",
							"",
							"",
							"",
							"// Assertions",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const cookieJar = pm.cookies.jar()",
							"",
							"",
							"cookieJar.clear(pm.environment.get('lvp_url'), (error) => {",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "agentLoginID",
							"value": "{{ClickerAgent}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{ClickerAgentPass}}",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "login_page",
							"value": "https://acd.{{env}}.livevox.com/{{ClientCode}}/AgentLogin",
							"type": "text"
						},
						{
							"key": "skillID",
							"value": "{{ClickerSkillId}}",
							"type": "text"
						},
						{
							"key": "extension",
							"value": "{{extension}}",
							"type": "text"
						},
						{
							"key": "browserAudioEnabled",
							"value": "false",
							"type": "text"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/Logon",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"Logon"
					]
				}
			},
			"response": []
		},
		{
			"name": "Clicker_Make_agent_ready",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const cookieJar = pm.cookies.jar();",
							"",
							"const url = \"https://portal.na3.livevox.com\"",
							"",
							"cookieJar.unset(url , 'LV_Session', (error) => {",
							"    if (error) console.log(error)",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Checking Status is \"+pm.response.status, function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/status/ready?_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"status",
						"ready"
					],
					"query": [
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Clicker_agent_get_agent_status",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response.agentStatus[0].lines[0])",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Checking ready state",
							"pm.test(\"Checking agent status = \", function () {",
							"    pm.expect(response.agentStatus[0].lines[0].state).to.eql(\"READY\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/status",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"status"
					],
					"query": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CloserAgentLogon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"console.log(response)",
							"",
							"",
							"",
							"const cookieJar = pm.cookies.jar();",
							"",
							"cookieJar.get(pm.environment.get('lvp_url'), \"LV_Session\", (error, cookie) => {",
							"    console.log(cookie)",
							"    pm.globals.set('closer_agent_cookie',cookie)",
							"",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const cookieJar = pm.cookies.jar()",
							"",
							"",
							"cookieJar.clear(pm.environment.get('lvp_url'), (error) => {",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "agentLoginID",
							"value": "{{CloserAgent}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{CloserAgentPass}}",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "login_page",
							"value": "https://acd.{{env}}.livevox.com/{{ClientCode}}/AgentLogin",
							"type": "text"
						},
						{
							"key": "skillID",
							"value": "{{CloserskillID}}",
							"type": "text"
						},
						{
							"key": "extension",
							"value": "{{extension}}",
							"type": "text"
						},
						{
							"key": "browserAudioEnabled",
							"value": "false",
							"type": "text"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/Logon",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"Logon"
					]
				}
			},
			"response": []
		},
		{
			"name": "Closer_Make_agent_ready",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const cookieJar = pm.cookies.jar();",
							"",
							"const url = \"https://portal.na3.livevox.com\"",
							"",
							"cookieJar.unset(url , 'LV_Session', (error) => {",
							"    if (error) console.log(error)",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{closer_agent_cookie}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/status/ready?_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"status",
						"ready"
					],
					"query": [
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Closer_agent_get_agent_status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response.agentStatus[0].lines[0])",
							"",
							"",
							"pm.test(\"Checking agent status = \", function () {",
							"    pm.expect(response.agentStatus[0].lines[0].state).to.eql(\"READY\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{closer_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/status",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"status"
					],
					"query": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAgentDesktopStats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"console.log(response)",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.availableAgents).to.eql(1);",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.availableAgents).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/GetAgentDesktopStats",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"GetAgentDesktopStats"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetHCIDialingList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"console.log(response)",
							"",
							"",
							"",
							"pm.globals.set('transaction_id',response.hciDialingList[0].transactionID)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/GetHCIDialingList?count=100&_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"GetHCIDialingList"
					],
					"query": [
						{
							"key": "count",
							"value": "100"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Launch_hci_call",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response)",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/LaunchHCICall?txnIDList={{transaction_id}}&_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"LaunchHCICall"
					],
					"query": [
						{
							"key": "txnIDList",
							"value": "{{transaction_id}}"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CheckingiNCALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response.agentStatus[0].lines[0])",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.agentStatus[0].lines[0].state).to.eql(\"INCALL\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{closer_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/status",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"status"
					],
					"query": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get_termcode",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.globals.set(\"Termcode\",parseInt(response.termCodeCategories[0].termCodes[0].id))",
							"",
							"console.log(pm.globals.get('Termcode'))",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/termCode?serviceId={{ClickerSkillId}}",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"termCode"
					],
					"query": [
						{
							"key": "serviceId",
							"value": "{{ClickerSkillId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "end_call_request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{closer_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/customer/call/end?lineNumber=ACD&_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"customer",
						"call",
						"end"
					],
					"query": [
						{
							"key": "lineNumber",
							"value": "ACD"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "WRAPUP State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response.agentStatus[0].lines[0])",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.agentStatus[0].lines[0].state).to.eql(\"WRAPUP\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{closer_agent_cookie}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/status",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"status"
					],
					"query": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "hci_agent_logof",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response)",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{hci_clicker_agent_cookie}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "payload",
							"value": "{\"agents\":[\"{{ClickerAgent}}\"],\"message\":\"\"}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/logoff",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"logoff"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"disabled": true
						},
						{
							"key": "payload",
							"value": "{\"agents\":[\"{{hci_userName}}\"],\"message\":\"\"}",
							"disabled": true
						},
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "closer_agent_logof",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"console.log(response)",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Cookie",
						"value": "LV_Session={{closer_agent_cookie}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "_",
							"value": "{{$timestamp}}",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "payload",
							"value": "{\"agents\":[\"{{closer_agent}}\"],\"message\":\"\"}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://acd.{{env}}.livevox.com/{{acd_version}}/agent/logoff",
					"protocol": "https",
					"host": [
						"acd",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"{{acd_version}}",
						"agent",
						"logoff"
					]
				}
			},
			"response": []
		},
		{
			"name": "lvp_login_after_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false,
				"followRedirects": true,
				"followOriginalHttpMethod": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_code",
							"value": "livevox",
							"type": "text"
						},
						{
							"key": "user",
							"value": "rrajarao",
							"type": "text"
						},
						{
							"key": "pass",
							"value": "livevox1",
							"type": "text"
						},
						{
							"key": "operation",
							"value": "login",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/lvp_{{lvp_version}}/login",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"lvp_{{lvp_version}}",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Checking campaign_reporting",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.status).to.eql(\"success\");",
							"});",
							"",
							"",
							"pm.test(\"Your test name\", function () {",
							"    pm.expect(response.dataObj.fileComplete).to.eql(\"REPORTED\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(()=> {},20000)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://portal.{{env}}.livevox.com/campaign_{{lvp_version}}/get_campaign_detail?client_id={{client_id}}&campaign_id={{uploaded_campaign}}&modify_date_long_format={{$timestamp}}&fullConfigMgrGUI=true&_={{$timestamp}}",
					"protocol": "https",
					"host": [
						"portal",
						"{{env}}",
						"livevox",
						"com"
					],
					"path": [
						"campaign_{{lvp_version}}",
						"get_campaign_detail"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{client_id}}"
						},
						{
							"key": "campaign_id",
							"value": "{{uploaded_campaign}}"
						},
						{
							"key": "modify_date_long_format",
							"value": "{{$timestamp}}"
						},
						{
							"key": "fullConfigMgrGUI",
							"value": "true"
						},
						{
							"key": "_",
							"value": "{{$timestamp}}"
						}
					]
				}
			},
			"response": []
		}
	]
}